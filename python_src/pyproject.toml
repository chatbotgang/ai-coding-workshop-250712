[project]
name = "ai-coding-workshop-250712"
version = "0.1.0"
description = ""
requires-python = ">=3.12"
dependencies = [
    "pydantic (>=2.11.7,<3.0.0)",
    "pytz (>=2025.2,<2026.0)",
    "pydantic-settings (>=2.10.1,<3.0.0)",
    "httpx (>=0.28.1,<0.29.0)",
    "uvicorn[standard] (>=0.35.0,<0.36.0)",
    "structlog (>=25.4.0,<26.0.0)",
    "fastapi (>=0.115.14,<0.116.0)"
]


[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
package-mode = false

[tool.poetry.group.dev.dependencies]
pytest = "^8.4.1"
pytest-timer = "^1.0.0"
isort = "^6.0.1"
black = "^25.1.0"
pyright = "^1.1.402"
freezegun = "^1.5.2"

[tool.black]
line-length = 120
target-version = ['py312']
skip-magic-trailing-comma = true
#include = '''
#(
#  /(
#      python_src
#  )/
#)
#'''

[tool.isort]
profile = "black"
line_length = 120
atomic = true
#src_paths = ["python_src"]

[tool.pyright]
#include = ["python_src"]
strictListInference = true
strictSetInference = true
# since the dictionary may contain various values, we disable the strict dictionary inference
strictDictionaryInference = false
deprecateTypingAliases = true
reportImportCycles = true
reportUnusedImport = true
reportUnusedClass = true
reportUnusedFunction = true
reportUnusedVariable = true
reportDuplicateImport = true
reportDeprecated = true
reportUnusedExpression = true

[tool.pytest.ini_options]
#pythonpath = [
#    "python_src"
#]
#testpaths = [
#    "tests"
#]
markers = [
    "unit",
]
addopts = [
    "-vv"
]
